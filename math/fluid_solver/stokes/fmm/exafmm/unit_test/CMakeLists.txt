
set(OBJ_FILES_CPU stokesSerial.cxx ijparallelrun.cxx let.cxx overlap_comm.cxx Nparallel.cxx skip_tree.cxx unpartition.cxx parallelrun.cxx bisection.cxx nth_element.cxx shift.cxx construct.cxx kernel.cxx Nserial.cxx ewald_direct.cxx serialrun.cxx unsort.cxx ijserialrun.cxx)
set(OBJ_FILES_GPU check_gpus.cxx direct_gpu.cxx )

MACRO(MAKE_TESTS TestList DriverName)
    SET(FileList "")
    FOREACH(test ${TestList})
        SET(FileList ${FileList} ${test})
    ENDFOREACH(test)
    CREATE_TEST_SOURCELIST(TestDriverSources ${DriverName}.cpp ${FileList})
    ADD_EXECUTABLE(${DriverName} ${TestDriverSources})
    FOREACH(test ${FileList})
        GET_FILENAME_COMPONENT(TestName ${test} NAME_WE)
        ADD_TEST(${TestName} ${CMAKE_CURRENT_BINARY_DIR}/${DriverName} ${TestName})
    ENDFOREACH (test)
ENDMACRO(MAKE_TESTS)

set(OBJ_LIBS mpi mpi_cxx vtkRendering vtkGraphics vtkFiltering vtkViews vtkCommon vtkWidgets vtkIO)
foreach(test ${OBJ_FILES_CPU})
    GET_FILENAME_COMPONENT(TestName ${test} NAME_WE)
    make_tests(${test} test_${TestName})
    target_link_libraries(test_${TestName} ${OBJ_LIBS})
    if(USE_QUARK)
        target_link_libraries(test_${TestName} quark)
    endif(USE_QUARK)

    if(USE_GPU)
        target_link_libraries(test_${TestName} gpuKernel)
    else(USE_GPU)
        target_link_libraries(test_${TestName} cpuKernel)
    endif(USE_GPU)
endforeach(test)
# make_tests("${OBJ_FILES_CPU}" unit_tests_cpu)
# target_link_libraries(unit_tests_cpu ${OBJ_LIBS})

# 
# add_definitions(-DVTK)
# add_executable(vtk_test vtk.cxx ../kernel/cpuSphericalLaplace.cxx)
# target_link_libraries(vtk_test ${LIBS_OBJ} )
# 
# add_executable(fdgl fdgl.cxx ../kernel/cpuSphericalLaplace.cxx ../kernel/cpuVanDerWaals.cxx ../kernel/cpuP2P.cxx)
# target_link_libraries(fdgl ${LIBS_OBJ})
# 
# add_executable(poisson poisson.cxx ../kernel/cpuSphericalLaplace.cxx ../kernel/cpuVanDerWaals.cxx ../kernel/cpuP2P.cxx)
# target_link_libraries(poisson ${LIBS_OBJ})
