
# Sets the variable GIT_COMMANDS
macro(SET_GIT_COMMANDS CLONE_PROJECT)
    set(GIT_COMMANDS "bash <<EOF")
    IF(${CLONE_PROJECT} EQUAL "ON")
        set(GIT_COMMANDS "${GIT_COMMANDS} \nif [ -d moops ]\; then")
        set(GIT_COMMANDS "${GIT_COMMANDS} \n  rm -Rf ${SCRATCH_REMOTE_DIRECTORY}/moops")
        set(GIT_COMMANDS "${GIT_COMMANDS} \nfi")
        set(GIT_COMMANDS "${GIT_COMMANDS} \ngit clone git@bitbucket.org:ricortiz/moops.git ${SCRATCH_REMOTE_DIRECTORY}/moops")
        set(GIT_COMMANDS "${GIT_COMMANDS} \nmkdir ${SCRATCH_REMOTE_DIRECTORY}/moops/bin")
        set(GIT_COMMANDS "${GIT_COMMANDS} \ncd ${SCRATCH_REMOTE_DIRECTORY}/moops/bin")
    else()
        set(GIT_COMMANDS "${GIT_COMMANDS} \nif [ ! -d ${SCRATCH_REMOTE_DIRECTORY}/moops/bin ]\; then")
        set(GIT_COMMANDS "${GIT_COMMANDS} \n  mkdir ${SCRATCH_REMOTE_DIRECTORY}/moops/bin")
        set(GIT_COMMANDS "${GIT_COMMANDS} \nfi")
        set(GIT_COMMANDS "${GIT_COMMANDS} \ncd ${SCRATCH_REMOTE_DIRECTORY}/moops/bin")
        set(GIT_COMMANDS "${GIT_COMMANDS} \ngit pull")
    ENDIF()
    set(GIT_COMMANDS "${GIT_COMMANDS} \nEOF")
endmacro(SET_GIT_COMMANDS)

# sets the variable BSUB_COMMANDS
macro(SET_BSUB_COMMANDS EXE JOB_NAME QUEUE)
    set(BSUB_COMMANDS "bsub <<EOF")
    set(BSUB_COMMANDS "${BSUB_COMMANDS} \n####   Run program    ####")
    set(BSUB_COMMANDS "${BSUB_COMMANDS} \n#BSUB -q ${QUEUE}")
    set(BSUB_COMMANDS "${BSUB_COMMANDS} \n#BSUB -J ${JOB_NAME}")
    set(BSUB_COMMANDS "${BSUB_COMMANDS} \n#BSUB -n 2")
    set(BSUB_COMMANDS "${BSUB_COMMANDS} \n#BSUB -T 12")
    set(BSUB_COMMANDS "${BSUB_COMMANDS} \n#BSUB -x")
    set(BSUB_COMMANDS "${BSUB_COMMANDS} \n#BSUB -o out.%J")
    set(BSUB_COMMANDS "${BSUB_COMMANDS} \n#BSUB -e err.%J")
    set(BSUB_COMMANDS "${BSUB_COMMANDS} \nmpirun ${EXE}")
    set(BSUB_COMMANDS "${BSUB_COMMANDS} \n####   End run program    ####")
    set(BSUB_COMMANDS "${BSUB_COMMANDS} \nEOF")
endmacro(SET_BSUB_COMMANDS)

macro(SUBMIT_JOB CMAKE_CACHE)
    set(BUILD_COMMANDS "bash <<EOF \ncd ${MOOPS_REMOTE_DIRECTORY}/bin")
    set(BUILD_COMMANDS "${BUILD_COMMANDS} \ncmake ${CMAKE_CACHE}")
    set(BUILD_COMMANDS "${BUILD_COMMANDS} \nmake ${PROGRAM_NAME}")
    set(BUILD_COMMANDS "${BUILD_COMMANDS} \nEOF")
message("${SSH_COMMAND} ${REMOTE_SERVER} ${BUILD_COMMANDS}")
# message("${SSH_COMMAND} ${REMOTE_SERVER} ${BSUB_COMMANDS}")
    find_program(SSH_COMMAND NAMES ssh)
    add_custom_target(Submit${PROGRAM_NAME}Job COMMAND ${SSH_COMMAND} ${REMOTE_SERVER} ${BUILD_COMMANDS})

endmacro()
